# Generated by Django 5.1.3 on 2025-03-17 16:21

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appraisal',
            fields=[
                ('appraisal_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('appraisal_year', models.IntegerField(default=2025)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_review', 'In Review'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('salary_scale_division', models.CharField(blank=True, max_length=50, null=True)),
                ('incremental_date_of_present_post', models.DateField(blank=True, null=True)),
                ('date_of_last_appraisal', models.DateField(blank=True, null=True)),
                ('present_post', models.CharField(blank=True, max_length=50, null=True)),
                ('current_enrollment_details', models.TextField(blank=True, max_length=255, null=True)),
                ('higher_degree_students_supervised', models.TextField(blank=True, null=True)),
                ('last_research', models.TextField(blank=True, null=True)),
                ('ongoing_research', models.TextField(blank=True, null=True)),
                ('attendance', models.TextField(blank=True, null=True)),
                ('conference_papers', models.TextField(blank=True, null=True)),
                ('consultancy_work', models.TextField(blank=True, null=True)),
                ('administrative_posts', models.TextField(blank=True, null=True)),
                ('participation_other_activities_university', models.TextField(blank=True, null=True)),
                ('participation_other_activities_outside', models.TextField(blank=True, null=True)),
                ('objectives_next_year', models.TextField(blank=True, null=True)),
                ('appraiser_comments', models.TextField(blank=True, null=True)),
                ('last_modified_date', models.DateTimeField(auto_now=True)),
                ('review_period_start', models.DateField(blank=True, help_text='Start date of review period', null=True)),
                ('review_period_end', models.DateField(blank=True, help_text='End date of review period', null=True)),
                ('first_post_govt', models.CharField(blank=True, max_length=255, null=True)),
                ('faculty_programme_govt', models.CharField(blank=True, max_length=255, null=True)),
                ('date_from_govt', models.DateField(blank=True, null=True)),
                ('date_to_govt', models.DateField(blank=True, null=True)),
                ('first_post_ubd', models.CharField(blank=True, max_length=255, null=True)),
                ('faculty_programme_ubd', models.CharField(blank=True, max_length=255, null=True)),
                ('date_from_ubd', models.DateField(blank=True, null=True)),
                ('date_to_ubd', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-date_created'],
                'permissions': [('can_view_all_appraisals', 'Can view all appraisals'), ('can_create_appraisal', 'Can create appraisal')],
            },
        ),
        migrations.CreateModel(
            name='AppraisalPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-start_date'],
                'permissions': [('can_manage_periods', 'Can manage appraisal periods')],
            },
        ),
        migrations.CreateModel(
            name='AppraisalPublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('year', models.IntegerField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('committee_type', models.CharField(blank=True, choices=[('UNIVERSITY', 'University Committees'), ('EXTERNAL', 'Outside University')], help_text='Type of committee membership', max_length=20, null=True)),
                ('committee_name', models.CharField(blank=True, help_text='Name of the committee', max_length=255, null=True)),
                ('position', models.CharField(blank=True, help_text='Position held in the committee', max_length=100, null=True)),
                ('from_date', models.DateField(blank=True, help_text='Start date of membership', null=True)),
                ('to_date', models.DateField(blank=True, help_text='End date of membership', null=True)),
            ],
            options={
                'verbose_name': 'Committee Membership',
                'verbose_name_plural': 'Committee Memberships',
                'ordering': ['-from_date'],
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('level', models.CharField(blank=True, max_length=20, null=True)),
                ('languageMedium', models.CharField(blank=True, max_length=20, null=True)),
                ('no_of_students', models.IntegerField(blank=True, null=True)),
                ('percentage_jointly_taught', models.PositiveIntegerField(blank=True, help_text='Percentage if jointly taught (0-100)', null=True)),
                ('hrs_weekly', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
                'ordering': ['code'],
            },
        ),
    ]
